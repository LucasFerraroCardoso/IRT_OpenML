Hiperparâmetros dos Modelos de ML utilizados

GaussianNB(priors=None, var_smoothing=1e-09)
Padrão do Scikit-Learn
------------------------------------------------------------
------------------------------------------------------------
BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None, fit_prior=True)
Padrão do Scikit-Learn
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=2, p=2,
                     weights='uniform')
Padrão do Scikit-Learn com 2 vizinhos
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=3, p=2,
                     weights='uniform')
Padrão do Scikit-Learn com 3 vizinhos
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')
Padrão do Scikit-Learn com 5 vizinhos
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=8, p=2,
                     weights='uniform')
Padrão do Scikit-Learn com 8 vizinhos
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=None, splitter='best')
Padrão do Scikit-Learn
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=3,
                       n_jobs=None, oob_score=False, random_state=None,
                       verbose=0, warm_start=False)
Padrão do Scikit-Learn com 3 árvores
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=5,
                       n_jobs=None, oob_score=False, random_state=None,
                       verbose=0, warm_start=False)
Padrão do Scikit-Learn com 5 árvores
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100,
                       n_jobs=None, oob_score=False, random_state=None,
                       verbose=0, warm_start=False)
Padrão do Scikit-Learn (100 árvores)
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',
    max_iter=-1, probability=False, random_state=None, shrinking=True,
    tol=0.001, verbose=False)
Padrão do Scikit-Learn
------------------------------------------------------------
------------------------------------------------------------
Iniciando o metodo:  MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=(100,), learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=200,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=None, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
Padrão do Scikit-Learn
------------------------------------------------------------
------------------------------------------------------------

